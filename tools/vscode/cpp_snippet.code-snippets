{
	// Place your algorithm 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Print to console": {
		"scope": "cpp",
		"prefix": "inc",
		"body": [
			"#include <bits/stdc++.h>",
			"\r",
			"#define ll long long",
			"#define mp make_pair",
			"#define pii pair<int, int >",
			"#define pil pair<int, ll>",
			"#define pll pair<ll, ll>",
			"#define inf 0x3f3f3f3f",
			"#define INF 0x3f3f3f3f3f3f3f3f",
			"\r",
			"using namespace std;",
			"\r",
			"int main()",
			"{",
			"//freopen(\"a.in\", \"r\", stdin);",
			"\tios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);",
			"\t$2",
			"\r",
			"\treturn 0;",
			"}"
		],
		"description": "Log output to console"
	}
}